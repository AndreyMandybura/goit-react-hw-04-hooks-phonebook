{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","console","log","props","onSubmit","this","className","s","form","label","type","pattern","title","required","onChange","inputName","inputNumber","button","Component","ContactList","contacts","onDeleteContact","list","map","contact","listItem","onClick","id","Filter","header","filterInput","App","filter","addContact","Contact","nanoid","some","toLowerCase","alert","deleteContact","contactId","handleChangeFilter","handleContactFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevState","setItem","stringify","statefilter","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d0a8d5c5.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          {' '}\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n            className={s.inputName}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n            className={s.inputNumber}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <div>\n      <ul className={s.list}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.listItem}>\n            {contact.name}: {contact.number}\n            <button onClick={() => onDeleteContact(contact.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div>\n      <h4 className={s.header}>Find contacts by name</h4>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={s.filterInput}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const Contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      this.state.contacts.some(\n        contact => contact.name.toLowerCase() === Contact.name.toLowerCase()\n      ) ||\n      this.state.contacts.some(contact => contact.number === Contact.number)\n    ) {\n      alert(`${Contact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [Contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleChangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  handleContactFilter = () => {\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter onChange={this.handleChangeFilter} value={this.statefilter} />\n        <ContactList\n          contacts={this.handleContactFilter()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Sw7-\",\"button\":\"ContactForm_button__DvJPa\",\"label\":\"ContactForm_label__27Anl\",\"inputName\":\"ContactForm_inputName__1ig12\",\"inputNumber\":\"ContactForm_inputNumber__1GHQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__37EZn\",\"listItem\":\"ContactList_listItem__2PgW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput___YfoP\",\"header\":\"Filter_header__3zUea\"};"],"sourceRoot":""}